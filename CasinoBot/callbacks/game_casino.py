import asyncio
from aiogram import Router, F
from aiogram.types import CallbackQuery, Message
from aiogram.fsm.context import FSMContext
from data.db import find_user, check_bonus, set_bet, change_money, check_bet
from keyboards.inline import generator_buttons
from utils.states import SetBet_Casino

router = Router()

def get_row(result_dice: int):
    slot_values = {
        1: ('–ë–∞—Ä', '–ë–∞—Ä', '–ë–∞—Ä'),
        2: ('–í–∏–Ω–æ–≥—Ä–∞–¥', '–ë–∞—Ä', '–ë–∞—Ä'),
        3: ('–õ–∏–º–æ–Ω', '–ë–∞—Ä', '–ë–∞—Ä'),
        4: ('–°–µ–º—ë—Ä–∫–∞', '–ë–∞—Ä', '–ë–∞—Ä'),
        5: ('–ë–∞—Ä', '–í–∏–Ω–æ–≥—Ä–∞–¥', '–ë–∞—Ä'),
        6: ('–í–∏–Ω–æ–≥—Ä–∞–¥', '–í–∏–Ω–æ–≥—Ä–∞–¥', '–ë–∞—Ä'),
        7: ('–õ–∏–º–æ–Ω', '–í–∏–Ω–æ–≥—Ä–∞–¥', '–ë–∞—Ä'),
        8: ('–°–µ–º—ë—Ä–∫–∞', '–í–∏–Ω–æ–≥—Ä–∞–¥', '–ë–∞—Ä'),
        9: ('–ë–∞—Ä', '–õ–∏–º–æ–Ω', '–ë–∞—Ä'),
        10: ('–í–∏–Ω–æ–≥—Ä–∞–¥', '–õ–∏–º–æ–Ω', '–ë–∞—Ä'),
        11: ('–õ–∏–º–æ–Ω', '–õ–∏–º–æ–Ω', '–ë–∞—Ä'),
        12: ('–°–µ–º—ë—Ä–∫–∞', '–õ–∏–º–æ–Ω', '–ë–∞—Ä'),
        13: ('–ë–∞—Ä', '–°–µ–º—ë—Ä–∫–∞', '–ë–∞—Ä'),
        14: ('–í–∏–Ω–æ–≥—Ä–∞–¥', '–°–µ–º—ë—Ä–∫–∞', '–ë–∞—Ä'),
        15: ('–õ–∏–º–æ–Ω', '–°–µ–º—ë—Ä–∫–∞', '–ë–∞—Ä'),
        16: ('–°–µ–º—ë—Ä–∫–∞', '–°–µ–º—ë—Ä–∫–∞', '–ë–∞—Ä'),
        17: ('–ë–∞—Ä', '–ë–∞—Ä', '–í–∏–Ω–æ–≥—Ä–∞–¥'),
        18: ('–í–∏–Ω–æ–≥—Ä–∞–¥', '–ë–∞—Ä', '–í–∏–Ω–æ–≥—Ä–∞–¥'),
        19: ('–õ–∏–º–æ–Ω', '–ë–∞—Ä', '–í–∏–Ω–æ–≥—Ä–∞–¥'),
        20: ('–°–µ–º—ë—Ä–∫–∞', '–ë–∞—Ä', '–í–∏–Ω–æ–≥—Ä–∞–¥'),
        21: ('–ë–∞—Ä', '–í–∏–Ω–æ–≥—Ä–∞–¥', '–í–∏–Ω–æ–≥—Ä–∞–¥'),
        22: ('–í–∏–Ω–æ–≥—Ä–∞–¥', '–í–∏–Ω–æ–≥—Ä–∞–¥', '–í–∏–Ω–æ–≥—Ä–∞–¥'),
        23: ('–õ–∏–º–æ–Ω', '–í–∏–Ω–æ–≥—Ä–∞–¥', '–í–∏–Ω–æ–≥—Ä–∞–¥'),
        24: ('–°–µ–º—ë—Ä–∫–∞', '–í–∏–Ω–æ–≥—Ä–∞–¥', '–í–∏–Ω–æ–≥—Ä–∞–¥'),
        25: ('–ë–∞—Ä', '–õ–∏–º–æ–Ω', '–í–∏–Ω–æ–≥—Ä–∞–¥'),
        26: ('–í–∏–Ω–æ–≥—Ä–∞–¥', '–õ–∏–º–æ–Ω', '–í–∏–Ω–æ–≥—Ä–∞–¥'),
        27: ('–õ–∏–º–æ–Ω', '–õ–∏–º–æ–Ω', '–í–∏–Ω–æ–≥—Ä–∞–¥'),
        28: ('–°–µ–º—ë—Ä–∫–∞', '–õ–∏–º–æ–Ω', '–í–∏–Ω–æ–≥—Ä–∞–¥'),
        29: ('–ë–∞—Ä', '–°–µ–º—ë—Ä–∫–∞', '–í–∏–Ω–æ–≥—Ä–∞–¥'),
        30: ('–í–∏–Ω–æ–≥—Ä–∞–¥', '–°–µ–º—ë—Ä–∫–∞', '–í–∏–Ω–æ–≥—Ä–∞–¥'),
        31: ('–õ–∏–º–æ–Ω', '–°–µ–º—ë—Ä–∫–∞', '–í–∏–Ω–æ–≥—Ä–∞–¥'),
        32: ('–°–µ–º—ë—Ä–∫–∞', '–°–µ–º—ë—Ä–∫–∞', '–í–∏–Ω–æ–≥—Ä–∞–¥'),
        33: ('–ë–∞—Ä', '–ë–∞—Ä', '–õ–∏–º–æ–Ω'),
        34: ('–í–∏–Ω–æ–≥—Ä–∞–¥', '–ë–∞—Ä', '–õ–∏–º–æ–Ω'),
        35: ('–õ–∏–º–æ–Ω', '–ë–∞—Ä', '–õ–∏–º–æ–Ω'),
        36: ('–°–µ–º—ë—Ä–∫–∞', '–ë–∞—Ä', '–õ–∏–º–æ–Ω'),
        37: ('–ë–∞—Ä', '–í–∏–Ω–æ–≥—Ä–∞–¥', '–õ–∏–º–æ–Ω'),
        38: ('–í–∏–Ω–æ–≥—Ä–∞–¥', '–í–∏–Ω–æ–≥—Ä–∞–¥', '–õ–∏–º–æ–Ω'),
        39: ('–õ–∏–º–æ–Ω', '–í–∏–Ω–æ–≥—Ä–∞–¥', '–õ–∏–º–æ–Ω'),
        40: ('–°–µ–º—ë—Ä–∫–∞', '–í–∏–Ω–æ–≥—Ä–∞–¥', '–õ–∏–º–æ–Ω'),
        41: ('–ë–∞—Ä', '–õ–∏–º–æ–Ω', '–õ–∏–º–æ–Ω'),
        42: ('–í–∏–Ω–æ–≥—Ä–∞–¥', '–õ–∏–º–æ–Ω', '–õ–∏–º–æ–Ω'),
        43: ('–õ–∏–º–æ–Ω', '–õ–∏–º–æ–Ω', '–õ–∏–º–æ–Ω'),
        44: ('–°–µ–º—ë—Ä–∫–∞', '–õ–∏–º–æ–Ω', '–õ–∏–º–æ–Ω'),
        45: ('–ë–∞—Ä', '–°–µ–º—ë—Ä–∫–∞', '–õ–∏–º–æ–Ω'),
        46: ('–í–∏–Ω–æ–≥—Ä–∞–¥', '–°–µ–º—ë—Ä–∫–∞', '–õ–∏–º–æ–Ω'),
        47: ('–õ–∏–º–æ–Ω', '–°–µ–º—ë—Ä–∫–∞', '–õ–∏–º–æ–Ω'),
        48: ('–°–µ–º—ë—Ä–∫–∞', '–°–µ–º—ë—Ä–∫–∞', '–õ–∏–º–æ–Ω'),
        49: ('–ë–∞—Ä', '–ë–∞—Ä', '–°–µ–º—ë—Ä–∫–∞'),
        50: ('–í–∏–Ω–æ–≥—Ä–∞–¥', '–ë–∞—Ä', '–°–µ–º—ë—Ä–∫–∞'),
        51: ('–õ–∏–º–æ–Ω', '–ë–∞—Ä', '–°–µ–º—ë—Ä–∫–∞'),
        52: ('–°–µ–º—ë—Ä–∫–∞', '–ë–∞—Ä', '–°–µ–º—ë—Ä–∫–∞'),
        53: ('–ë–∞—Ä', '–í–∏–Ω–æ–≥—Ä–∞–¥', '–°–µ–º—ë—Ä–∫–∞'),
        54: ('–í–∏–Ω–æ–≥—Ä–∞–¥', '–í–∏–Ω–æ–≥—Ä–∞–¥', '–°–µ–º—ë—Ä–∫–∞'),
        55: ('–õ–∏–º–æ–Ω', '–í–∏–Ω–æ–≥—Ä–∞–¥', '–°–µ–º—ë—Ä–∫–∞'),
        56: ('–°–µ–º—ë—Ä–∫–∞', '–í–∏–Ω–æ–≥—Ä–∞–¥', '–°–µ–º—ë—Ä–∫–∞'),
        57: ('–ë–∞—Ä', '–õ–∏–º–æ–Ω', '–°–µ–º—ë—Ä–∫–∞'),
        58: ('–í–∏–Ω–æ–≥—Ä–∞–¥', '–õ–∏–º–æ–Ω', '–°–µ–º—ë—Ä–∫–∞'),
        59: ('–õ–∏–º–æ–Ω', '–õ–∏–º–æ–Ω', '–°–µ–º—ë—Ä–∫–∞'),
        60: ('–°–µ–º—ë—Ä–∫–∞', '–õ–∏–º–æ–Ω', '–°–µ–º—ë—Ä–∫–∞'),
        61: ('–ë–∞—Ä', '–°–µ–º—ë—Ä–∫–∞', '–°–µ–º—ë—Ä–∫–∞'),
        62: ('–í–∏–Ω–æ–≥—Ä–∞–¥', '–°–µ–º—ë—Ä–∫–∞', '–°–µ–º—ë—Ä–∫–∞'),
        63: ('–õ–∏–º–æ–Ω', '–°–µ–º—ë—Ä–∫–∞', '–°–µ–º—ë—Ä–∫–∞'),
        64: ('–°–µ–º—ë—Ä–∫–∞', '–°–µ–º—ë—Ä–∫–∞', '–°–µ–º—ë—Ä–∫–∞')
    }
    return ', '.join(slot_values.get(result_dice)).capitalize()

def get_point(result_dice: int):
    if result_dice in (1, 22, 43):
        return 4
    elif result_dice in (6, 11, 16, 17, 27, 32, 33, 38, 48, 49, 54, 59):
        return 2
    elif result_dice == 64:
        return 10
    else:
        return -1

def get_result_text(result_dice: int, message):
    result = get_point(result_dice=result_dice)
    combination_text = get_row(result_dice=result_dice)

    if result > 0:
        text_for_gamer = f'–í–∞—à–∞ –∫–æ–º–±–∏–Ω–∞—Ü–∏—è: \r\n{combination_text}\r\n–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –≤—ã–π–≥—Ä–∞–ª–∏!\n{change_money(message=message, casino=True, win=True, multiplier=result)}'
    else:
        text_for_gamer = f'–í–∞—à–∞ –∫–æ–º–±–∏–Ω–∞—Ü–∏—è: \r\n{combination_text}\r\n–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏... –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.\n{change_money(message=message, casino=True, win=False)}'
    return text_for_gamer



@router.callback_query(F.data == 'casino')
async def casino_menu(query: CallbackQuery, state: FSMContext):
    await check_bonus(query=query)
    await state.set_state(SetBet_Casino.bet)
    user = find_user(query)
    if check_bet(message=query, casino=True):
        await query.message.edit_text(f'–í–∞—à–∞ —Å—Ç–∞–≤–∫–∞: {user.bet_casino} üí∏\n–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –Ω–∞–ø–∏—à–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é —Å—Ç–∞–≤–∫—É –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ "–ù–∞—á–∞—Ç—å"', reply_markup=generator_buttons(['–ù–∞—á–∞—Ç—å', '–ù–∞–∑–∞–¥'], ['casino_start', 'main_menu'], 2))
    else:
        await set_bet(query, bet='0', casino=True)
        await query.message.edit_text('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –¥–∞–Ω–Ω–æ–π —Å—Ç–∞–≤–∫–∏ –∏–ª–∏ –æ–Ω–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞, —É–∫–∞–∂–∏—Ç–µ –¥—Ä—É–≥—É—é')
        await query.message.answer(
            f'–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –Ω–∞–ø–∏—à–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é —Å—Ç–∞–≤–∫—É'
        )


@router.message(SetBet_Casino.bet)
async def set_bet_casino(message: Message):
    await check_bonus(message=message)
    bet = message.text
    await set_bet(message, bet, casino=True)
    user = find_user(message)
    await message.answer(
            f'–í–∞—à–∞ —Å—Ç–∞–≤–∫–∞: {user.bet_casino} üí∏\n–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –Ω–∞–ø–∏—à–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é —Å—Ç–∞–≤–∫—É –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ "–ù–∞—á–∞—Ç—å"',
            reply_markup=generator_buttons(['–ù–∞—á–∞—Ç—å', '–ù–∞–∑–∞–¥'], ['casino_start', 'main_menu'], 2))


@router.callback_query(F.data == 'casino_start')
async def bones_start_bet(query:CallbackQuery, state:FSMContext):
    await state.clear()
    if check_bet(message=query, roulette=True):
        await state.clear()
        await check_bonus(query=query)
        result_dice = await query.message.answer_dice(emoji='üé∞')
        await asyncio.sleep(3)
        text = get_result_text(result_dice=result_dice.dice.value, message=query)
        await query.message.answer(text=text, reply_markup=generator_buttons(['–ü–æ–≤—Ç–æ—Ä–∏—Ç—å', '–ù–∞–∑–∞–¥'], ['casino_start', 'casino'], 2))
    else:
        await query.message.answer('–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Ç–∞–≤–∫—É!', reply_markup=generator_buttons(["–ù–∞–∑–∞–¥"],["casino"], 1))

